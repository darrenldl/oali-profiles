# Config based on example script on ferm website
#
# Source of original script:
#   Ferm example script
#   Firewall configuration for a workstation which accepts remote ssh login
#   Author: Max Kellermann <max@duempel.org>
#
#   URL: ferm.foo-projects.org/download/examples/workstation.ferm
#   Retrieved @ 2016-10-04 14:32

domain (ip ip6) table filter {
    chain PER_IP_FLOOD_DRAIN {
        # allow when under limit
        mod hashlimit hashlimit 50/second hashlimit-burst 50
                      hashlimit-mode dstip hashlimit-name PER_IP_FLOOD_LIMIT ACCEPT;

        # log 5/second when above limit
        # mod hashlimit hashlimit 5/second hashlimit-burst 5
        #               hashlimit-mode dstip hashlimit-name PER_IP_FLOOD_DRAIN_LOG_LIMIT
        #               LOG log-level warning log-prefix "Flood detected: ";

        DROP;
    }

    chain GLOBAL_FLOOD_DRAIN {
        # redirect to PER_IP_FLOOD_DRAIN when under limit
        mod limit limit 200/second limit-burst 200 jump PER_IP_FLOOD_DRAIN;

        # log 10 packets/second when above limit
        # mod limit limit 5/second limit-burst 5
        #           LOG log-level warning log-prefix "Flood detected: ";

        DROP;
    }

    chain INPUT {
        policy DROP;

        # connection tracking
        mod state state INVALID DROP;
        mod state state (ESTABLISHED RELATED) ACCEPT;

        # allow local connections
        interface lo ACCEPT;

        # respond to ping, with rate limiting
        proto icmp icmp-type echo-request jump GLOBAL_FLOOD_DRAIN;

        # log with rate limit
        # mod limit limit 5/second limit-burst 5
        #           LOG log-level info log-prefix "Invalid connection: ";

        # allow following port ranges for both TCP and UDP
        proto tcp syn dport (30000:30100 40000:50100 60000:61000) jump GLOBAL_FLOOD_DRAIN;
        proto udp     dport (30000:30100 40000:50100 60000:61000) jump ACCEPT;

        # drop everything else by policy
    }

    # no limits on outgoing connections
    chain OUTPUT policy ACCEPT;

    # no forwarding
    chain FORWARD policy DROP;
}
